<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/rabbit"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">
	
	<!-- amqp -->
	<!-- 创建连接工厂 -->
	<connection-factory id="myConnectionFactory" 
		host="localhost"
		port="5672"
		username="guest"
		password="guest"
	/>
	
	<!-- <admin>元素会创建一个RabbitMQ管理组件（administrative component），它会自动创建（如果它们在RabbitMQ代理中尚未存在的话）
		上述这些元素所声明的队列、Exchange以及binding。 -->
	<admin connection-factory="myConnectionFactory"/>
	<!-- 对于简单的消息来说，我们只需<queue id="myAlertQueue" name="queryMQ">就足够了。这是因为默认会有一个没有名称的direct Exchange，
		 所有的队列都会绑定到这个Exchange上，并且routing key与队列的名称相同 -->
	<queue  name="queryMQ1"></queue>
	<queue  name="queryMQ2"></queue>
	<queue  name="queryMQ3"></queue>
	
	<!-- 绑定信息路由的Exchange和队列，每一种Exchange路由都有一种算法，消息先被发布到Exchange，符合算法的消息才会被加载打队列中 -->
	<!-- 定义一个任意消息都会路由到队列上 的  fanout exchange-->
	<fanout-exchange name="fannoutQueueExchange">
		<bindings>
			<binding queue="queryMQ1"></binding>
			<binding queue="queryMQ2"></binding>
			<binding queue="queryMQ3"></binding>
		</bindings>
	</fanout-exchange>
	
	<!-- 使用rabbitTemplate的来发送信息，定义 <template>消除原来的rabbitTemplate本身的样板代码，使用时bean注入一样使用 -->
	<template id="rabbitTemplate" connection-factory="myConnectionFactory"></template>
</beans:beans>
